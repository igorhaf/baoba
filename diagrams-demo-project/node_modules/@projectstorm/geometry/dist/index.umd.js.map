{"version":3,"file":"index.umd.js","mappings":"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","sources":["webpack://@projectstorm/react-diagrams-geometry/webpack/universalModuleDefinition","webpack://@projectstorm/react-diagrams-geometry/webpack/bootstrap","webpack://@projectstorm/react-diagrams-geometry/webpack/runtime/define property getters","webpack://@projectstorm/react-diagrams-geometry/webpack/runtime/hasOwnProperty shorthand","webpack://@projectstorm/react-diagrams-geometry/webpack/runtime/make namespace object","webpack://@projectstorm/react-diagrams-geometry/./src/Matrix.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Point.ts","webpack://@projectstorm/react-diagrams-geometry/external commonjs \"lodash\"","webpack://@projectstorm/react-diagrams-geometry/./src/Bounds.ts","webpack://@projectstorm/react-diagrams-geometry/./src/toolkit.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Polygon.ts","webpack://@projectstorm/react-diagrams-geometry/./src/Rectangle.ts","webpack://@projectstorm/react-diagrams-geometry/./src/BezierCurve.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@projectstorm/react-diagrams-geometry\"] = factory();\n\telse\n\t\troot[\"@projectstorm/react-diagrams-geometry\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Point } from './Point';\n\nexport class Matrix {\n\tmatrix: number[][];\n\n\tconstructor(matrix: number[][]) {\n\t\tthis.matrix = matrix;\n\t}\n\n\tmmul(matrix: Matrix): Matrix {\n\t\tthis.matrix = this.matrix.map((row, i) =>\n\t\t\tmatrix.asArray()[0].map((_, j) => row.reduce((acc, _, n) => acc + this.matrix[i][n] * matrix.asArray()[n][j], 0))\n\t\t);\n\t\treturn this;\n\t}\n\n\tasArray(): number[][] {\n\t\treturn this.matrix;\n\t}\n\n\tget(rowIndex: number, columnIndex: number): number {\n\t\treturn this.asArray()[rowIndex][columnIndex];\n\t}\n\n\tpublic static multiply(...matrices: Matrix[]): Matrix {\n\t\tlet m: Matrix = matrices[0];\n\t\tfor (let i = 1; i < matrices.length; i++) {\n\t\t\tm = m.mmul(matrices[i]);\n\t\t}\n\t\treturn m;\n\t}\n\n\tpublic static scaleMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[x, 0, 0],\n\t\t\t[0, y, 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static translateMatrix(x: number, y: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[1, 0, x],\n\t\t\t[0, 1, y],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tpublic static rotateMatrix(deg: number): Matrix {\n\t\treturn new Matrix([\n\t\t\t[Math.cos(deg), -1 * Math.sin(deg), 0],\n\t\t\t[Math.sin(deg), Math.cos(deg), 0],\n\t\t\t[0, 0, 1]\n\t\t]);\n\t}\n\n\tstatic createScaleMatrix(x, y, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tMatrix.translateMatrix(origin.x, origin.y),\n\t\t\tMatrix.scaleMatrix(x, y),\n\t\t\tMatrix.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n\n\tstatic createRotateMatrix(deg: number, origin: Point): Matrix {\n\t\treturn this.multiply(\n\t\t\tMatrix.translateMatrix(origin.x, origin.y),\n\t\t\tMatrix.rotateMatrix(deg),\n\t\t\tMatrix.translateMatrix(-origin.x, -origin.y)\n\t\t);\n\t}\n}\n","import { Matrix } from './Matrix';\n\nexport class Point {\n\tx: number;\n\ty: number;\n\n\tconstructor(x: number = 0, y: number = 0) {\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\ttranslate(x: number, y: number) {\n\t\tthis.x += x;\n\t\tthis.y += y;\n\t}\n\n\tclone() {\n\t\treturn new Point(this.x, this.y);\n\t}\n\n\ttoSVG() {\n\t\treturn this.x + ' ' + this.y;\n\t}\n\n\tasMatrix() {\n\t\treturn new Matrix([[this.x], [this.y], [1]]);\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\tlet final: Matrix = matrix.mmul(this.asMatrix());\n\t\tthis.x = final.get(0, 0);\n\t\tthis.y = final.get(1, 0);\n\t}\n\n\tpublic static middlePoint(pointA: Point, pointB: Point): Point {\n\t\treturn new Point((pointB.x + pointA.x) / 2, (pointB.y + pointA.y) / 2);\n\t}\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"lodash\");","import { Point } from './Point';\n\nexport enum BoundsCorner {\n\tTOP_LEFT = 'TL',\n\tTOP_RIGHT = 'TR',\n\tBOTTOM_RIGHT = 'BR',\n\tBOTTOM_LEFT = 'BL'\n}\n\nexport type Bounds = { [k in BoundsCorner]: Point };\n\nexport const boundsFromPositionAndSize = (x: number, y: number, width: number, height: number): Bounds => {\n\treturn {\n\t\t[BoundsCorner.TOP_LEFT]: new Point(x, y),\n\t\t[BoundsCorner.TOP_RIGHT]: new Point(x + width, y),\n\t\t[BoundsCorner.BOTTOM_RIGHT]: new Point(x + width, y + height),\n\t\t[BoundsCorner.BOTTOM_LEFT]: new Point(x, y + height)\n\t};\n};\n\nexport const createEmptyBounds = () => {\n\treturn {\n\t\t[BoundsCorner.TOP_LEFT]: new Point(),\n\t\t[BoundsCorner.TOP_RIGHT]: new Point(),\n\t\t[BoundsCorner.BOTTOM_RIGHT]: new Point(),\n\t\t[BoundsCorner.BOTTOM_LEFT]: new Point()\n\t};\n};\n","import { Point } from './Point';\nimport * as _ from 'lodash';\nimport { Polygon } from './Polygon';\nimport { Bounds, BoundsCorner, createEmptyBounds } from './Bounds';\n\nexport const boundingBoxFromPoints = (points: Point[]): Bounds => {\n\tif (points.length === 0) {\n\t\treturn createEmptyBounds();\n\t}\n\n\tlet minX = points[0].x;\n\tlet maxX = points[0].x;\n\tlet minY = points[0].y;\n\tlet maxY = points[0].y;\n\n\tfor (let i = 1; i < points.length; i++) {\n\t\tif (points[i].x < minX) {\n\t\t\tminX = points[i].x;\n\t\t}\n\t\tif (points[i].x > maxX) {\n\t\t\tmaxX = points[i].x;\n\t\t}\n\t\tif (points[i].y < minY) {\n\t\t\tminY = points[i].y;\n\t\t}\n\t\tif (points[i].y > maxY) {\n\t\t\tmaxY = points[i].y;\n\t\t}\n\t}\n\n\treturn {\n\t\t[BoundsCorner.TOP_LEFT]: new Point(minX, minY),\n\t\t[BoundsCorner.TOP_RIGHT]: new Point(maxX, minY),\n\t\t[BoundsCorner.BOTTOM_RIGHT]: new Point(maxX, maxY),\n\t\t[BoundsCorner.BOTTOM_LEFT]: new Point(minX, maxY)\n\t};\n};\n\nexport const boundingBoxFromPolygons = (polygons: Polygon[]): Bounds => {\n\treturn boundingBoxFromPoints(\n\t\t_.flatMap(polygons, (polygon) => {\n\t\t\treturn polygon.getPoints();\n\t\t})\n\t);\n};\n","import { Point } from './Point';\nimport * as _ from 'lodash';\nimport { Matrix } from './Matrix';\nimport { boundingBoxFromPoints } from './toolkit';\nimport { Bounds, BoundsCorner } from './Bounds';\n\nexport class Polygon {\n\tprotected points: Point[];\n\n\tconstructor(points: Point[] = []) {\n\t\tthis.points = points;\n\t}\n\n\tserialize() {\n\t\treturn _.map(this.points, (point) => {\n\t\t\treturn [point.x, point.y];\n\t\t});\n\t}\n\n\tdeserialize(data: any) {\n\t\tthis.points = _.map(data, (point) => {\n\t\t\treturn new Point(point[0], point[1]);\n\t\t});\n\t}\n\n\tscale(x, y, origin: Point) {\n\t\tlet matrix = Matrix.createScaleMatrix(x, y, origin);\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\ttransform(matrix: Matrix) {\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.transform(matrix);\n\t\t});\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tthis.points = points;\n\t}\n\n\tgetPoints(): Point[] {\n\t\treturn this.points;\n\t}\n\n\trotate(degrees: number) {\n\t\tthis.transform(Matrix.createRotateMatrix(degrees / (180 / Math.PI), this.getOrigin()));\n\t}\n\n\ttranslate(offsetX: number, offsetY: number) {\n\t\t_.forEach(this.points, (point) => {\n\t\t\tpoint.translate(offsetX, offsetY);\n\t\t});\n\t}\n\n\tdoClone(ob: this) {\n\t\tthis.points = _.map(ob.points, (point) => {\n\t\t\treturn point.clone();\n\t\t});\n\t}\n\n\tclone(): this {\n\t\tlet ob = Object.create(this);\n\t\tob.doClone(this);\n\t\treturn ob;\n\t}\n\n\tgetOrigin(): Point {\n\t\tif (this.points.length === 0) {\n\t\t\treturn null;\n\t\t}\n\t\tlet dimensions = boundingBoxFromPoints(this.points);\n\t\treturn Point.middlePoint(dimensions[BoundsCorner.TOP_LEFT], dimensions[BoundsCorner.BOTTOM_RIGHT]);\n\t}\n\n\tgetBoundingBox(): Bounds {\n\t\treturn boundingBoxFromPoints(this.points);\n\t}\n}\n","import { Point } from './Point';\nimport { Polygon } from './Polygon';\nimport { Bounds, BoundsCorner, boundsFromPositionAndSize, createEmptyBounds } from './Bounds';\n\nexport class Rectangle extends Polygon {\n\tstatic fromPositionAndSize(x: number, y: number, width: number, height: number) {\n\t\treturn new Rectangle(boundsFromPositionAndSize(x, y, width, height));\n\t}\n\n\tstatic fromPointAndSize(position: Point, width: number, height: number) {\n\t\treturn new Rectangle(boundsFromPositionAndSize(position.x, position.y, width, height));\n\t}\n\n\tconstructor(points?: Bounds) {\n\t\tif (!points) {\n\t\t\tpoints = createEmptyBounds();\n\t\t}\n\n\t\tsuper([\n\t\t\tpoints[BoundsCorner.TOP_LEFT],\n\t\t\tpoints[BoundsCorner.TOP_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_LEFT]\n\t\t]);\n\t}\n\n\tupdateDimensions(x: number, y: number, width: number, height: number) {\n\t\tconst points = boundsFromPositionAndSize(x, y, width, height);\n\t\tthis.setPoints([\n\t\t\tpoints[BoundsCorner.TOP_LEFT],\n\t\t\tpoints[BoundsCorner.TOP_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_RIGHT],\n\t\t\tpoints[BoundsCorner.BOTTOM_LEFT]\n\t\t]);\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow 'Rectangles must always have 4 points';\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tcontainsPoint(point: Point) {\n\t\tconst tl = this.getTopLeft();\n\t\tconst br = this.getBottomRight();\n\n\t\treturn point.x >= tl.x && point.x <= br.x && point.y >= tl.y && point.y <= br.y;\n\t}\n\n\tgetWidth(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getTopLeft().x - this.getTopRight().x, 2) + Math.pow(this.getTopLeft().y - this.getTopRight().y, 2)\n\t\t);\n\t}\n\n\tgetHeight(): number {\n\t\treturn Math.sqrt(\n\t\t\tMath.pow(this.getBottomLeft().x - this.getTopLeft().x, 2) +\n\t\t\t\tMath.pow(this.getBottomLeft().y - this.getTopLeft().y, 2)\n\t\t);\n\t}\n\n\tgetTopMiddle(): Point {\n\t\treturn Point.middlePoint(this.getTopLeft(), this.getTopRight());\n\t}\n\n\tgetBottomMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getBottomRight());\n\t}\n\n\tgetLeftMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomLeft(), this.getTopLeft());\n\t}\n\n\tgetRightMiddle(): Point {\n\t\treturn Point.middlePoint(this.getBottomRight(), this.getTopRight());\n\t}\n\n\tgetTopLeft(): Point {\n\t\treturn this.points[0];\n\t}\n\n\tgetTopRight(): Point {\n\t\treturn this.points[1];\n\t}\n\n\tgetBottomRight(): Point {\n\t\treturn this.points[2];\n\t}\n\n\tgetBottomLeft(): Point {\n\t\treturn this.points[3];\n\t}\n}\n","import { Point } from './Point';\nimport { Polygon } from './Polygon';\n\nexport enum BezierCurvepPoints {\n\tSOURCE = 0,\n\tSOURCE_CONTROL = 1,\n\tTARGET_CONTROL = 2,\n\tTARGET = 3\n}\n\nexport class BezierCurve extends Polygon {\n\tconstructor() {\n\t\tsuper([new Point(0, 0), new Point(0, 0), new Point(0, 0), new Point(0, 0)]);\n\t}\n\n\tgetSVGCurve(): string {\n\t\treturn `M${this.getSource().toSVG()} C${this.getSourceControl().toSVG()}, ${this.getTargetControl().toSVG()}, ${this.getTarget().toSVG()}`;\n\t}\n\n\tsetPoints(points: Point[]) {\n\t\tif (points.length !== 4) {\n\t\t\tthrow new Error('BezierCurve must have extactly 4 points');\n\t\t}\n\t\tsuper.setPoints(points);\n\t}\n\n\tgetSource(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE];\n\t}\n\n\tgetSourceControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.SOURCE_CONTROL];\n\t}\n\n\tgetTargetControl(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET_CONTROL];\n\t}\n\n\tgetTarget(): Point {\n\t\treturn this.points[BezierCurvepPoints.TARGET];\n\t}\n\n\tsetSource(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE] = point;\n\t}\n\n\tsetSourceControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.SOURCE_CONTROL] = point;\n\t}\n\n\tsetTargetControl(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET_CONTROL] = point;\n\t}\n\n\tsetTarget(point: Point) {\n\t\tthis.points[BezierCurvepPoints.TARGET] = point;\n\t}\n}\n"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","Matrix","constructor","matrix","this","mmul","map","row","i","asArray","_","j","reduce","acc","n","rowIndex","columnIndex","static","matrices","m","length","x","y","deg","Math","cos","sin","origin","multiply","translateMatrix","scaleMatrix","rotateMatrix","Point","translate","clone","toSVG","asMatrix","transform","final","pointA","pointB","require","BoundsCorner","boundsFromPositionAndSize","width","height","TOP_LEFT","TOP_RIGHT","BOTTOM_RIGHT","BOTTOM_LEFT","createEmptyBounds","boundingBoxFromPoints","points","minX","maxX","minY","maxY","boundingBoxFromPolygons","polygons","polygon","getPoints","Polygon","serialize","point","deserialize","data","scale","createScaleMatrix","setPoints","rotate","degrees","createRotateMatrix","PI","getOrigin","offsetX","offsetY","doClone","ob","create","dimensions","middlePoint","getBoundingBox","Rectangle","position","super","updateDimensions","containsPoint","tl","getTopLeft","br","getBottomRight","getWidth","sqrt","pow","getTopRight","getHeight","getBottomLeft","getTopMiddle","getBottomMiddle","getLeftMiddle","getRightMiddle","BezierCurvepPoints","BezierCurve","getSVGCurve","getSource","getSourceControl","getTargetControl","getTarget","Error","SOURCE","SOURCE_CONTROL","TARGET_CONTROL","TARGET","setSource","setSourceControl","setTargetControl","setTarget"],"sourceRoot":""}